# Словарь для преобразования цифр шестнадцатеричных чисел в слова
digit_to_word = {
    '0': 'ноль',
    '1': 'один',
    '2': 'два',
    '3': 'три',
    '4': 'четыре',
    '5': 'пять',
    '6': 'шесть',
    '7': 'семь',
    '8': 'восемь',
    '9': 'девять',
    'A': 'десять',
    'B': 'одиннадцать',
    'C': 'двенадцать',
    'D': 'тринадцать',
    'E': 'четырнадцать',
    'F': 'пятнадцать'
}

#функция для преобразования шестнадцатеричного числа в словесное представление
def convert_to_words(hex_number):
    decimal_number = int(hex_number, 16)  #преобразуем шестнадцатеричное число в десятичное
    word_representation = []  #создаем пустой список для хранения слов
    while decimal_number > 0:  #пока десятичное число больше нуля
        digit = decimal_number % 10  #получаем последнюю цифру числа
        word_representation.append(digit_to_word[str(digit)])#добавляем слово в список
        decimal_number //= 10  #удаляем последнюю цифру числа
    return ' '.join(reversed(word_representation))  #объединяем слова в строку, инвертируя список

#ввод параметра K с клавиатуры
K = int(input("Введите параметр K: "))

#максимальное значение для шестнадцатеричного числа
MAX_VALUE = 0x800

#список для хранения подходящих шестнадцатеричных чисел
suitable_numbers = []

#открываем файл для чтения
#открываем файл для чтения
with open('lab 1.txt', 'r') as f:
    block = f.read(1024)  #читаем первый блок данных размером 1024 байта
    while block:  #пока есть блоки данных
        for hex_number in block.split():  #разбиваем блок на шестнадцатеричные числа
            if int(hex_number[-1], 16) % 2 == 0:  #проверяем четность последней цифры числа
                decimal_number = int(hex_number, 16)  #преобразуем шестнадцатеричное число в десятичное
                if decimal_number <= MAX_VALUE and len(hex_number) > K:  #проверяем условия задачи
                    suitable_numbers.append(hex_number)  #добавляем число в список подходящих
                    print(f"{hex_number}: {convert_to_words(hex_number)}")  #выводим число и его словесное представление
        block = f.read(1024)  # Читаем следующий блок данных

#выводим результаты
if suitable_numbers:  #если есть подходящие числа
    max_decimal_number = max(int(num, 16) for num in suitable_numbers)  #находим максимальное число
    print(f"\nМаксимальное число: {convert_to_words(hex(max_decimal_number)[2:].upper())}")  #выводим его словесное представление
    print(f"Общее количество подходящих чисел: {len(suitable_numbers)}")  #выводим количество подходящих чисел
else:  #если подходящих чисел нет
    print("\nНе найдено подходящих чисел.")  #выводим сообщение об этом
